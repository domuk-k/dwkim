{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer2/source-files'\n\nexport const Post = defineDocumentType(() => ({\n  name: 'Post',\n  filePathPattern: `posts/**/*.md`,\n  contentType: 'mdx',\n  fields: {\n    title: {\n      type: 'string',\n      description: 'The title of the post',\n      required: true,\n    },\n    date: {\n      type: 'date',\n      description: 'The date of the post',\n      required: true,\n    },\n    summary: {\n      type: 'string',\n      description: 'Summary of the post',\n      required: false,\n    },\n    tags: {\n      type: 'list',\n      of: { type: 'string' },\n      description: 'Tags for the post',\n      required: false,\n    },\n  },\n  computedFields: {\n    url: {\n      type: 'string',\n      resolve: (doc) => `/posts/${doc._raw.flattenedPath.replace('posts/', '')}`,\n    },\n    slug: {\n      type: 'string',\n      resolve: (doc) => doc._raw.flattenedPath.replace('posts/', ''),\n    },\n  },\n}))\n\nexport const Book = defineDocumentType(() => ({\n  name: 'Book',\n  filePathPattern: `books/**/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: {\n      type: 'string',\n      description: 'The title of the book',\n      required: true,\n    },\n    author: {\n      type: 'string',\n      description: 'The author of the book',\n      required: true,\n    },\n    rating: {\n      type: 'number',\n      description: 'Rating out of 5',\n      required: false,\n    },\n    tags: {\n      type: 'list',\n      of: { type: 'string' },\n      description: 'Tags for the book',\n      required: false,\n    },\n  },\n  computedFields: {\n    url: {\n      type: 'string',\n      resolve: (doc) => `/books/${doc._raw.flattenedPath.replace('books/', '')}`,\n    },\n    slug: {\n      type: 'string',\n      resolve: (doc) => doc._raw.flattenedPath.replace('books/', ''),\n    },\n  },\n}))\n\nexport const Card = defineDocumentType(() => ({\n  name: 'Card',\n  filePathPattern: `cards/**/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: {\n      type: 'string',\n      description: 'The title of the card',\n      required: true,\n    },\n    description: {\n      type: 'string',\n      description: 'Description of the card',\n      required: false,\n    },\n    icon: {\n      type: 'string',\n      description: 'Icon name for the card',\n      required: false,\n    },\n  },\n  computedFields: {\n    url: {\n      type: 'string',\n      resolve: (doc) => `/cards/${doc._raw.flattenedPath.replace('cards/', '')}`,\n    },\n    slug: {\n      type: 'string',\n      resolve: (doc) => doc._raw.flattenedPath.replace('cards/', ''),\n    },\n  },\n}))\n\nexport default makeSource({\n  contentDirPath: './content',\n  documentTypes: [Post, Book, Card],\n  mdx: {\n    remarkPlugins: [],\n    rehypePlugins: [],\n  },\n})"],
  "mappings": "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",
  "names": []
}
