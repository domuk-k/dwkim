---
interface Props {
  code: string
  language?: string
}

const { code, language = 'sh' } = Astro.props
---

<div class="snippet-container">
  <div class="snippet-content">
    <pre><code class={`language-${language}`}>{code}</code></pre>
    <button class="snippet-copy-btn" data-code={code} aria-label="Copy to clipboard">
      <svg
        class="copy-icon"
        width="16"
        height="16"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
      >
        <rect width="14" height="14" x="8" y="8" rx="2" ry="2"></rect>
        <path d="m4 16c-1.1 0-2-.9-2-2v-10c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"></path>
      </svg>
      <svg
        class="check-icon hidden"
        width="16"
        height="16"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
      >
        <polyline points="20,6 9,17 4,12"></polyline>
      </svg>
    </button>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const copyButtons = document.querySelectorAll('.snippet-copy-btn')

    copyButtons.forEach((button) => {
      button.addEventListener('click', async () => {
        const code = button.getAttribute('data-code')
        const copyIcon = button.querySelector('.copy-icon')
        const checkIcon = button.querySelector('.check-icon')

        try {
          await navigator.clipboard.writeText(code)

          // Show success state
          copyIcon.classList.add('hidden')
          checkIcon.classList.remove('hidden')

          // Reset after 2 seconds
          setTimeout(() => {
            copyIcon.classList.remove('hidden')
            checkIcon.classList.add('hidden')
          }, 2000)
        } catch (err) {
          console.error('Failed to copy: ', err)
        }
      })
    })
  })
</script>

<style>
  .snippet-container {
    position: relative;
    border: 1px solid var(--border);
    border-radius: 0.5rem;
    background: var(--code-bg);
    overflow: hidden;
  }

  .snippet-content {
    position: relative;
    padding: 1rem;
  }

  .snippet-content pre {
    margin: 0;
    padding: 0;
    background: none;
    border: none;
    font-family: var(--font-mono);
    font-size: 0.875rem;
    line-height: 1.5;
    color: var(--text-primary);
    overflow-x: auto;
  }

  .snippet-content code {
    background: none;
    padding: 0;
    border-radius: 0;
    font-family: inherit;
    color: inherit;
  }

  .snippet-content code.language-sh::before {
    content: '> ';
    color: var(--text-tertiary);
    user-select: none;
  }

  .snippet-copy-btn {
    position: absolute;
    top: 0.75rem;
    right: 0.75rem;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 2rem;
    height: 2rem;
    border: none;
    background: var(--bg);
    border: 1px solid var(--border);
    border-radius: 0.375rem;
    color: var(--text-secondary);
    cursor: pointer;
    transition: all 0.15s ease;
    opacity: 0;
  }

  .snippet-container:hover .snippet-copy-btn {
    opacity: 1;
  }

  .snippet-copy-btn:hover {
    background: var(--selection);
    color: var(--text-primary);
  }

  .hidden {
    display: none;
  }
</style>
