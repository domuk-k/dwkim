---
import { themeConfig } from '@/config'
---

{
  themeConfig.general.themeToggle && (
    <button id="theme-toggle" class="theme-toggle" aria-label="Toggle theme">
      <div class="theme-icon hollow-circle" />
      <div class="theme-icon solid-circle" />
      <div class="theme-icon beige-circle" />
    </button>
  )
}

<script is:inline>
  function bindThemeToggle() {
    const themeToggle = document.getElementById('theme-toggle')
    if (themeToggle && window.ThemeManager) {
      // Remove existing event listeners to prevent duplicates
      const newToggle = themeToggle.cloneNode(true)
      themeToggle.parentNode.replaceChild(newToggle, themeToggle)

      newToggle.addEventListener('click', function (e) {
        e.preventDefault()
        e.stopPropagation()
        
        // 물결 애니메이션 트리거
        const circles = newToggle.querySelectorAll('.theme-icon')
        circles.forEach((circle, index) => {
          circle.classList.remove('ripple')
          setTimeout(() => {
            circle.classList.add('ripple')
          }, index * 100) // 100ms씩 지연
        })
        
        // 애니메이션 완료 후 클래스 제거
        setTimeout(() => {
          circles.forEach(circle => circle.classList.remove('ripple'))
        }, circles.length * 100 + 300)
        
        window.ThemeManager.toggle()
      })
    }
  }

  // Bind on initial load
  window.addEventListener('DOMContentLoaded', bindThemeToggle)

  // Bind on Astro page transitions
  document.addEventListener('astro:page-load', bindThemeToggle)
</script>

<style>
  .theme-toggle {
    background: none;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    height: 1.5rem;
    gap: 0.325rem;
    color: var(--text-primary);
    transition: opacity 0.2s ease;
    padding: 0;
    position: relative;
  }

  .theme-toggle:active {
    opacity: 0.5;
  }

  .theme-icon {
    width: 0.5625rem;
    height: 0.5625rem;
    transition: all 0.2s ease;
    cursor: pointer;
  }

  /* 개별 원 호버 효과 */
  .theme-icon:hover {
    transform: scale(1.2);
  }

  /* 클릭 시 물결 애니메이션 */
  .theme-icon.ripple {
    animation: ripple-effect 0.3s ease-out;
  }

  @keyframes ripple-effect {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.3);
    }
    100% {
      transform: scale(1);
    }
  }

  .hollow-circle {
    border: none;
    border-radius: 50%;
    box-shadow: inset 0 0 0 1.5px var(--text-primary);
  }

  .solid-circle {
    background-color: var(--text-primary);
    border-radius: 50%;
  }

  .beige-circle {
    background-color: #f5f5dc;
    border: 1.5px solid var(--text-primary);
    border-radius: 50%;
  }
</style>
