services:
  # Redis for rate limiting and caching
  redis:
    image: redis:7-alpine
    container_name: persona-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3

  # Chroma Vector Database
  chroma:
    image: chromadb/chroma:latest
    container_name: persona-chroma
    ports:
      - '8000:8000'
    volumes:
      - chroma_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/api/v1/heartbeat']
      interval: 30s
      timeout: 10s
      retries: 3

  # Persona API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: persona-api
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - PORT=3000
      - HOST=0.0.0.0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CHROMA_URL=http://chroma:8000
      - CHROMA_COLLECTION_NAME=persona_documents
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=gpt-4o-mini
      - MAX_SEARCH_RESULTS=5
      - CONTEXT_WINDOW=4000
      - RATE_LIMIT_MAX=100
      - RATE_LIMIT_WINDOW=60000
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      redis:
        condition: service_healthy
      chroma:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  redis_data:
  chroma_data:
